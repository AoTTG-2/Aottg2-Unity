{
  "name": "Random",
  "info": {
    "summary": "\r\n            Random can be initialized as a class with an int given as the seed value.\r\n            Note that this is optional, and you can reference Random directly as a static class.\r\n            ",
    "remarks": "",
    "code": "\r\n            # Use random methods directly\r\n            r = Random.RandomInt(0, 100);\r\n            \r\n            # Or create an instance of Random with a seed\r\n            generator = Random(123);\r\n            \r\n            # Use it\r\n            a = generator.RandomInt(0, 100);\r\n            \r\n            # Seed allows repeatable random values\r\n            generator2 = Random(123);\r\n            b = generator.RandomInt(0, 100);\r\n            compared = a == b;    # Always True\r\n            ",
    "parameters": null,
    "returns": null
  },
  "constructors": [
    {
      "parameters": [],
      "info": {
        "summary": "",
        "remarks": "",
        "code": "",
        "parameters": null,
        "returns": null
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "seed",
          "info": null,
          "type": {
            "name": "int",
            "arguments": []
          },
          "defaultValue": "0",
          "isOptional": false
        }
      ],
      "info": {
        "summary": "",
        "remarks": "",
        "code": "",
        "parameters": null,
        "returns": null
      },
      "obsoleteMessage": "",
      "isObsolete": false
    }
  ],
  "staticFields": [],
  "instanceFields": [],
  "staticMethods": [],
  "instanceMethods": [
    {
      "parameters": [
        {
          "name": "min",
          "info": null,
          "type": {
            "name": "int",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        },
        {
          "name": "max",
          "info": null,
          "type": {
            "name": "int",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "int",
        "arguments": []
      },
      "label": "RandomInt",
      "info": {
        "summary": "Generates a random integer between the specified range.",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "min",
          "info": null,
          "type": {
            "name": "float",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        },
        {
          "name": "max",
          "info": null,
          "type": {
            "name": "float",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "float",
        "arguments": []
      },
      "label": "RandomFloat",
      "info": {
        "summary": "Generates a random float between the specified range.",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [],
      "returnType": {
        "name": "bool",
        "arguments": []
      },
      "label": "RandomBool",
      "info": {
        "summary": "Returns random boolean.",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "a",
          "info": null,
          "type": {
            "name": "Vector3",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        },
        {
          "name": "b",
          "info": null,
          "type": {
            "name": "Vector3",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "Vector3",
        "arguments": []
      },
      "label": "RandomVector3",
      "info": {
        "summary": "Generates a random Vector3 between the specified ranges.",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "flat",
          "info": null,
          "type": {
            "name": "bool",
            "arguments": []
          },
          "defaultValue": "False",
          "isOptional": true
        }
      ],
      "returnType": {
        "name": "Vector3",
        "arguments": []
      },
      "label": "RandomDirection",
      "info": {
        "summary": "Generates a random normalized direction vector. If flat is true, the y component will be zero.",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [],
      "returnType": {
        "name": "int",
        "arguments": []
      },
      "label": "RandomSign",
      "info": {
        "summary": "Generates a random sign, either 1 or -1.",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "x",
          "info": null,
          "type": {
            "name": "float",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        },
        {
          "name": "y",
          "info": null,
          "type": {
            "name": "float",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "float",
        "arguments": []
      },
      "label": "PerlinNoise",
      "info": {
        "summary": "Returns a point sampled from generated 2d perlin noise. (see Unity Mathf.PerlinNoise for more information)",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    }
  ],
  "kind": "EXTENSION",
  "baseTypeName": "Object",
  "obsoleteMessage": "",
  "isObsolete": false
}