{
  "name": "Math",
  "info": {
    "summary": "\r\n            Math functions. Note that parameter types can be either int or float unless otherwise specified.\r\n            Functions may return int or float depending on the parameter types given.\r\n            ",
    "remarks": "",
    "code": "",
    "parameters": null,
    "returns": null
  },
  "constructors": null,
  "staticFields": [
    {
      "type": {
        "name": "float",
        "arguments": []
      },
      "label": "PI",
      "info": {
        "summary": "The value of PI",
        "remarks": "",
        "code": "",
        "parameters": null,
        "returns": null
      },
      "readonly": true,
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "type": {
        "name": "float",
        "arguments": []
      },
      "label": "Infinity",
      "info": {
        "summary": "The value of Infinity",
        "remarks": "",
        "code": "",
        "parameters": null,
        "returns": null
      },
      "readonly": true,
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "type": {
        "name": "float",
        "arguments": []
      },
      "label": "NegativeInfinity",
      "info": {
        "summary": "The value of Negative Infinity",
        "remarks": "",
        "code": "",
        "parameters": null,
        "returns": null
      },
      "readonly": true,
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "type": {
        "name": "float",
        "arguments": []
      },
      "label": "Rad2DegConstant",
      "info": {
        "summary": "The value of Rad2Deg constant",
        "remarks": "",
        "code": "",
        "parameters": null,
        "returns": null
      },
      "readonly": true,
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "type": {
        "name": "float",
        "arguments": []
      },
      "label": "Deg2RadConstant",
      "info": {
        "summary": "The value of Deg2Rad constant",
        "remarks": "",
        "code": "",
        "parameters": null,
        "returns": null
      },
      "readonly": true,
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "type": {
        "name": "float",
        "arguments": []
      },
      "label": "Epsilon",
      "info": {
        "summary": "The value of Epsilon",
        "remarks": "",
        "code": "",
        "parameters": null,
        "returns": null
      },
      "readonly": true,
      "obsoleteMessage": "",
      "isObsolete": false
    }
  ],
  "instanceFields": [],
  "staticMethods": [],
  "instanceMethods": [
    {
      "parameters": [
        {
          "name": "value",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        },
        {
          "name": "min",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        },
        {
          "name": "max",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "Object",
        "arguments": []
      },
      "label": "Clamp",
      "info": {
        "summary": "Clamp a value between a minimum and maximum value",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "a",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        },
        {
          "name": "b",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "Object",
        "arguments": []
      },
      "label": "Max",
      "info": {
        "summary": "Get the maximum of two values",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "a",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        },
        {
          "name": "b",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "Object",
        "arguments": []
      },
      "label": "Min",
      "info": {
        "summary": "Get the minimum of two values",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "a",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        },
        {
          "name": "b",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "Object",
        "arguments": []
      },
      "label": "Pow",
      "info": {
        "summary": "Raise a value to the power of another value",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "value",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "Object",
        "arguments": []
      },
      "label": "Abs",
      "info": {
        "summary": "Get the absolute value of a number",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "value",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "Object",
        "arguments": []
      },
      "label": "Sqrt",
      "info": {
        "summary": "Get the square root of a number",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "a",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        },
        {
          "name": "b",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "Object",
        "arguments": []
      },
      "label": "Mod",
      "info": {
        "summary": "Get the remainder of a division operation",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "angle",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "Object",
        "arguments": []
      },
      "label": "Sin",
      "info": {
        "summary": "Get the sine of an angle in degrees",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "angle",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "Object",
        "arguments": []
      },
      "label": "Cos",
      "info": {
        "summary": "Get the cosine of an angle in degrees",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "angle",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "Object",
        "arguments": []
      },
      "label": "Tan",
      "info": {
        "summary": "Get the tangent of an angle in degrees",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "value",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "Object",
        "arguments": []
      },
      "label": "Asin",
      "info": {
        "summary": "Get the arcsine of a value in degrees",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "value",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "Object",
        "arguments": []
      },
      "label": "Acos",
      "info": {
        "summary": "Get the arccosine of a value in degrees",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "value",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "Object",
        "arguments": []
      },
      "label": "Atan",
      "info": {
        "summary": "Get the arctangent of a value in degrees",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "a",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        },
        {
          "name": "b",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "Object",
        "arguments": []
      },
      "label": "Atan2",
      "info": {
        "summary": "Get the arctangent of a value in degrees",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "value",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "Object",
        "arguments": []
      },
      "label": "Ceil",
      "info": {
        "summary": "Get the smallest integer greater than or equal to a value",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "value",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "Object",
        "arguments": []
      },
      "label": "Floor",
      "info": {
        "summary": "Get the largest integer less than or equal to a value",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "value",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "Object",
        "arguments": []
      },
      "label": "Round",
      "info": {
        "summary": "Round a value to the nearest integer",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "angle",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "Object",
        "arguments": []
      },
      "label": "Deg2Rad",
      "info": {
        "summary": "Convert an angle from degrees to radians",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "angle",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "Object",
        "arguments": []
      },
      "label": "Rad2Deg",
      "info": {
        "summary": "Convert an angle from radians to degrees",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "a",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        },
        {
          "name": "b",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        },
        {
          "name": "t",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "Object",
        "arguments": []
      },
      "label": "Lerp",
      "info": {
        "summary": "Linearly interpolate between two values",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "a",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        },
        {
          "name": "b",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        },
        {
          "name": "t",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "Object",
        "arguments": []
      },
      "label": "LerpUnclamped",
      "info": {
        "summary": "Linearly interpolate between two values without clamping",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "value",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "Object",
        "arguments": []
      },
      "label": "Sign",
      "info": {
        "summary": "Get the sign of a value",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "a",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        },
        {
          "name": "b",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        },
        {
          "name": "value",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "Object",
        "arguments": []
      },
      "label": "InverseLerp",
      "info": {
        "summary": "Get the inverse lerp of two values",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "a",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        },
        {
          "name": "b",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        },
        {
          "name": "t",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "Object",
        "arguments": []
      },
      "label": "LerpAngle",
      "info": {
        "summary": "Linearly interpolate between two angles",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "value",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "Object",
        "arguments": []
      },
      "label": "Log",
      "info": {
        "summary": "Get the natural logarithm of a value",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "current",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        },
        {
          "name": "target",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        },
        {
          "name": "maxDelta",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "Object",
        "arguments": []
      },
      "label": "MoveTowards",
      "info": {
        "summary": "Move a value towards a target value",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "current",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        },
        {
          "name": "target",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        },
        {
          "name": "maxDelta",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "Object",
        "arguments": []
      },
      "label": "MoveTowardsAngle",
      "info": {
        "summary": "Move an angle towards a target angle",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "t",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        },
        {
          "name": "length",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "Object",
        "arguments": []
      },
      "label": "PingPong",
      "info": {
        "summary": "Get the ping pong value of a time value",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "current",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        },
        {
          "name": "target",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        },
        {
          "name": "currentVelocity",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        },
        {
          "name": "smoothTime",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        },
        {
          "name": "maxSpeed",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        },
        {
          "name": "deltaTime",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "Object",
        "arguments": []
      },
      "label": "SmoothDamp",
      "info": {
        "summary": "Smoothly damp a value towards a target value",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "value",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "Object",
        "arguments": []
      },
      "label": "Exp",
      "info": {
        "summary": "Get the exponential value of a number",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "current",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        },
        {
          "name": "target",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        },
        {
          "name": "currentVelocity",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        },
        {
          "name": "smoothTime",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        },
        {
          "name": "maxSpeed",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        },
        {
          "name": "deltaTime",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "Object",
        "arguments": []
      },
      "label": "SmoothDampAngle",
      "info": {
        "summary": "Smoothly damp an angle towards a target angle",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "a",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        },
        {
          "name": "b",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        },
        {
          "name": "t",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "Object",
        "arguments": []
      },
      "label": "SmoothStep",
      "info": {
        "summary": "Smoothly step between two values",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "a",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        },
        {
          "name": "b",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "Object",
        "arguments": []
      },
      "label": "BitwiseAnd",
      "info": {
        "summary": "Perform a bitwise AND operation",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "a",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        },
        {
          "name": "b",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "Object",
        "arguments": []
      },
      "label": "BitwiseOr",
      "info": {
        "summary": "Perform a bitwise OR operation",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "a",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        },
        {
          "name": "b",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "Object",
        "arguments": []
      },
      "label": "BitwiseXor",
      "info": {
        "summary": "Perform a bitwise XOR operation",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "value",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "Object",
        "arguments": []
      },
      "label": "BitwiseNot",
      "info": {
        "summary": "Perform a bitwise NOT operation",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "value",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        },
        {
          "name": "shift",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "Object",
        "arguments": []
      },
      "label": "BitwiseLeftShift",
      "info": {
        "summary": "Shift bits to the left",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "value",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        },
        {
          "name": "shift",
          "info": null,
          "type": {
            "name": "Object",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "Object",
        "arguments": []
      },
      "label": "BitwiseRightShift",
      "info": {
        "summary": "Shift bits to the right",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    }
  ],
  "kind": "EXTENSION",
  "baseTypeName": "Object",
  "obsoleteMessage": "",
  "isObsolete": false
}