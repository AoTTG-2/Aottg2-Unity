{
  "name": "Character",
  "info": {
    "summary": "\r\n            Character is the base class that Human, Titan, and Shifter inherit from.\r\n            Only character owner can modify fields and call functions unless otherwise specified.\r\n            ",
    "remarks": "",
    "code": "",
    "parameters": null,
    "returns": null
  },
  "constructors": null,
  "staticFields": [],
  "instanceFields": [
    {
      "type": {
        "name": "string",
        "arguments": []
      },
      "label": "Name",
      "info": {
        "summary": "Character's name.",
        "remarks": "",
        "code": "",
        "parameters": null,
        "returns": null
      },
      "readonly": false,
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "type": {
        "name": "string",
        "arguments": []
      },
      "label": "Guild",
      "info": {
        "summary": "Character's guild.",
        "remarks": "",
        "code": "",
        "parameters": null,
        "returns": null
      },
      "readonly": false,
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "type": {
        "name": "Player",
        "arguments": []
      },
      "label": "Player",
      "info": {
        "summary": "Player who owns this character.",
        "remarks": "",
        "code": "",
        "parameters": null,
        "returns": null
      },
      "readonly": true,
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "type": {
        "name": "bool",
        "arguments": []
      },
      "label": "IsAI",
      "info": {
        "summary": "Is this character AI?",
        "remarks": "",
        "code": "",
        "parameters": null,
        "returns": null
      },
      "readonly": true,
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "type": {
        "name": "int",
        "arguments": []
      },
      "label": "ViewID",
      "info": {
        "summary": "Network view ID of the character.",
        "remarks": "",
        "code": "",
        "parameters": null,
        "returns": null
      },
      "readonly": true,
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "type": {
        "name": "bool",
        "arguments": []
      },
      "label": "IsMine",
      "info": {
        "summary": "Is this character mine?",
        "remarks": "",
        "code": "",
        "parameters": null,
        "returns": null
      },
      "readonly": true,
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "type": {
        "name": "bool",
        "arguments": []
      },
      "label": "IsMainCharacter",
      "info": {
        "summary": "Character belongs to my player and is the main character (the camera-followed player).",
        "remarks": "",
        "code": "",
        "parameters": null,
        "returns": null
      },
      "readonly": true,
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "type": {
        "name": "Transform",
        "arguments": []
      },
      "label": "Transform",
      "info": {
        "summary": "Unity transform of the character.",
        "remarks": "",
        "code": "",
        "parameters": null,
        "returns": null
      },
      "readonly": true,
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "type": {
        "name": "Vector3",
        "arguments": []
      },
      "label": "Position",
      "info": {
        "summary": "Position of the character.",
        "remarks": "",
        "code": "",
        "parameters": null,
        "returns": null
      },
      "readonly": false,
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "type": {
        "name": "Vector3",
        "arguments": []
      },
      "label": "Rotation",
      "info": {
        "summary": "Rotation of the character.",
        "remarks": "",
        "code": "",
        "parameters": null,
        "returns": null
      },
      "readonly": false,
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "type": {
        "name": "Quaternion",
        "arguments": []
      },
      "label": "QuaternionRotation",
      "info": {
        "summary": "Quaternion rotation of the character.",
        "remarks": "",
        "code": "",
        "parameters": null,
        "returns": null
      },
      "readonly": false,
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "type": {
        "name": "Vector3",
        "arguments": []
      },
      "label": "Velocity",
      "info": {
        "summary": "Velocity of the character.",
        "remarks": "",
        "code": "",
        "parameters": null,
        "returns": null
      },
      "readonly": false,
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "type": {
        "name": "Vector3",
        "arguments": []
      },
      "label": "Forward",
      "info": {
        "summary": "Forward direction of the character.",
        "remarks": "",
        "code": "",
        "parameters": null,
        "returns": null
      },
      "readonly": false,
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "type": {
        "name": "Vector3",
        "arguments": []
      },
      "label": "Right",
      "info": {
        "summary": "Right direction of the character.",
        "remarks": "",
        "code": "",
        "parameters": null,
        "returns": null
      },
      "readonly": false,
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "type": {
        "name": "Vector3",
        "arguments": []
      },
      "label": "Up",
      "info": {
        "summary": "Up direction of the character.",
        "remarks": "",
        "code": "",
        "parameters": null,
        "returns": null
      },
      "readonly": false,
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "type": {
        "name": "bool",
        "arguments": []
      },
      "label": "HasTargetDirection",
      "info": {
        "summary": "If the character has a target direction it is turning towards.",
        "remarks": "",
        "code": "",
        "parameters": null,
        "returns": null
      },
      "readonly": true,
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "type": {
        "name": "Vector3",
        "arguments": []
      },
      "label": "TargetDirection",
      "info": {
        "summary": "The character's target direction.",
        "remarks": "",
        "code": "",
        "parameters": null,
        "returns": null
      },
      "readonly": true,
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "type": {
        "name": "string",
        "arguments": []
      },
      "label": "Team",
      "info": {
        "summary": "Team character belongs to.",
        "remarks": "",
        "code": "",
        "parameters": null,
        "returns": null
      },
      "readonly": false,
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "type": {
        "name": "float",
        "arguments": []
      },
      "label": "Health",
      "info": {
        "summary": "Character's current health.",
        "remarks": "",
        "code": "",
        "parameters": null,
        "returns": null
      },
      "readonly": false,
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "type": {
        "name": "float",
        "arguments": []
      },
      "label": "MaxHealth",
      "info": {
        "summary": "Character's maximum health.",
        "remarks": "",
        "code": "",
        "parameters": null,
        "returns": null
      },
      "readonly": false,
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "type": {
        "name": "bool",
        "arguments": []
      },
      "label": "CustomDamageEnabled",
      "info": {
        "summary": "Is custom damage dealing enabled.",
        "remarks": "",
        "code": "",
        "parameters": null,
        "returns": null
      },
      "readonly": false,
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "type": {
        "name": "int",
        "arguments": []
      },
      "label": "CustomDamage",
      "info": {
        "summary": "Amount of custom damage to deal per attack.",
        "remarks": "",
        "code": "",
        "parameters": null,
        "returns": null
      },
      "readonly": false,
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "type": {
        "name": "string",
        "arguments": []
      },
      "label": "CurrentAnimation",
      "info": {
        "summary": "Character's current playing animation.",
        "remarks": "",
        "code": "",
        "parameters": null,
        "returns": null
      },
      "readonly": true,
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "type": {
        "name": "bool",
        "arguments": []
      },
      "label": "Grounded",
      "info": {
        "summary": "Character's grounded status.",
        "remarks": "",
        "code": "",
        "parameters": null,
        "returns": null
      },
      "readonly": true,
      "obsoleteMessage": "",
      "isObsolete": false
    }
  ],
  "staticMethods": [],
  "instanceMethods": [
    {
      "parameters": [
        {
          "name": "killer",
          "info": null,
          "type": {
            "name": "string",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "null",
        "arguments": []
      },
      "label": "GetKilled",
      "info": {
        "summary": "Kills the character. Callable by non-owners.",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "killer",
          "info": null,
          "type": {
            "name": "string",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        },
        {
          "name": "damage",
          "info": null,
          "type": {
            "name": "int",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "null",
        "arguments": []
      },
      "label": "GetDamaged",
      "info": {
        "summary": "Damages the character and kills it if its health reaches 0. Callable by non-owners.",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "emote",
          "info": null,
          "type": {
            "name": "string",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "null",
        "arguments": []
      },
      "label": "Emote",
      "info": {
        "summary": "Causes the character to emote. The list of available emotes is the same as those shown in the in-game emote menu.",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "animation",
          "info": null,
          "type": {
            "name": "string",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        },
        {
          "name": "fade",
          "info": null,
          "type": {
            "name": "float",
            "arguments": []
          },
          "defaultValue": "0.1",
          "isOptional": true
        }
      ],
      "returnType": {
        "name": "null",
        "arguments": []
      },
      "label": "PlayAnimation",
      "info": {
        "summary": "Causes the character to play an animation.  If the fade parameter is provided, will crossfade the animation by this timestep. Available animations can be found here: Human, Titan, Annie, Eren. Use the right-hand string value for the animation.",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "animation",
          "info": null,
          "type": {
            "name": "string",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        },
        {
          "name": "fade",
          "info": null,
          "type": {
            "name": "float",
            "arguments": []
          },
          "defaultValue": "0.1",
          "isOptional": true
        }
      ],
      "returnType": {
        "name": "null",
        "arguments": []
      },
      "label": "ForceAnimation",
      "info": {
        "summary": "Forces the character to play an animation. If the fade parameter is provided, will crossfade the animation by this timestep. Available animations can be found here: Human, Titan, Annie, Eren. Use the right-hand string value for the animation.",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "animation",
          "info": null,
          "type": {
            "name": "string",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "float",
        "arguments": []
      },
      "label": "GetAnimationLength",
      "info": {
        "summary": "Gets the length of animation.",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "sound",
          "info": null,
          "type": {
            "name": "string",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "null",
        "arguments": []
      },
      "label": "PlaySound",
      "info": {
        "summary": "Plays a sound if present in the character. Available sound names can be found here: Humans, Shifters, Titans. Note that shifters also have all titan sounds.",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "sound",
          "info": null,
          "type": {
            "name": "string",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "null",
        "arguments": []
      },
      "label": "StopSound",
      "info": {
        "summary": "Stops the sound.",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "position",
          "info": null,
          "type": {
            "name": "Vector3",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "null",
        "arguments": []
      },
      "label": "LookAt",
      "info": {
        "summary": "Rotates the character such that it is looking towards a world position.",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "force",
          "info": null,
          "type": {
            "name": "Vector3",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        },
        {
          "name": "mode",
          "info": null,
          "type": {
            "name": "string",
            "arguments": []
          },
          "defaultValue": "\"Acceleration\"",
          "isOptional": true
        }
      ],
      "returnType": {
        "name": "null",
        "arguments": []
      },
      "label": "AddForce",
      "info": {
        "summary": "Adds a force to the character with given force vector and optional mode. Valid modes are Force, Acceleration, Impulse, VelocityChange with default being Acceleration.",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "delay",
          "info": null,
          "type": {
            "name": "float",
            "arguments": []
          },
          "defaultValue": "",
          "isOptional": false
        }
      ],
      "returnType": {
        "name": "null",
        "arguments": []
      },
      "label": "Reveal",
      "info": {
        "summary": "Reveal the titan for a set number of seconds.",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [
        {
          "name": "color",
          "info": null,
          "type": {
            "name": "Color",
            "arguments": []
          },
          "defaultValue": "null",
          "isOptional": true
        },
        {
          "name": "mode",
          "info": null,
          "type": {
            "name": "string",
            "arguments": []
          },
          "defaultValue": "\"OutlineAll\"",
          "isOptional": true
        }
      ],
      "returnType": {
        "name": "null",
        "arguments": []
      },
      "label": "AddOutline",
      "info": {
        "summary": "Adds an outline effect with the given color and mode. Valid modes are: OutlineAll, OutlineVisible, OutlineHidden, OutlineAndSilhouette, SilhouetteOnly, OutlineAndLightenColor",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    },
    {
      "parameters": [],
      "returnType": {
        "name": "null",
        "arguments": []
      },
      "label": "RemoveOutline",
      "info": {
        "summary": "Removes the outline effect from the character.",
        "remarks": "",
        "code": "",
        "parameters": {},
        "returns": ""
      },
      "obsoleteMessage": "",
      "isObsolete": false
    }
  ],
  "kind": "CLASS",
  "baseTypeName": "Object",
  "obsoleteMessage": "",
  "isObsolete": false
}